//library
loadi(63,13);
loadi(64,14);

//timer
loadi(4, 17);
loadi(5, 18);

//init
loadi(65,7);
loadi(66,8);

//halt
loadi(22,35);
loadi(23,36);

//exception
loadi(2, 15);
loadi(3, 16);

//int7
loadi(16,29);
loadi(17,30);

//module_0 device managager 
loadi(40,53);
loadi(41,54);

//module_4 resource handler
loadi(48,61);
loadi(49,62);

//module_5 Scheduler
loadi(50,63);
loadi(51,64);

//second process
loadi(83,69);

//third process
loadi(89,70);


//initializing terminal status as free
[TERMINAL_STATUS_TABLE] = 0;

//init_page_Table

//changing_the_PTBR_value_for_init_PTLR_remains_the_same
PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";


[76*512] = [65 * 512 + 1];

//pid_for_init
[PROCESS_TABLE + 16 + 1] = 1;

//init_process_gets_Scheduled_first
[PROCESS_TABLE + 16 + 4]=CREATED;

//user_area_page
[PROCESS_TABLE + 16 + 11] = 80;

//KPTR_for_init
[PROCESS_TABLE + 16  + 12] = 0;

//UPTR_for_init
[PROCESS_TABLE + 16  + 13] = 8*512;

//PTBR_for_init
[PROCESS_TABLE + 16 + 14] = PTBR;

//PTLR_for_init
[PROCESS_TABLE + 16 + 15] = PTLR;





//second process
//page table

PTBR = PAGE_TABLE_BASE + 40;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 86;
[PTBR+5] = "0110";
[PTBR+6] = 87;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 84;
[PTBR+17] = "0110";
[PTBR+18] = 85;
[PTBR+19] = "0110";


[84*512] = [83 * 512 + 1];

//pid
[PROCESS_TABLE + 2*16 + 1] = 2;

[PROCESS_TABLE + 2*16 + 4]=CREATED;

//user_area_page
[PROCESS_TABLE + 2*16 + 11] = 88;

//KPTR
[PROCESS_TABLE + 2*16  + 12] = 0;

//UPTR
[PROCESS_TABLE + 2*16  + 13] = 8*512;

//PTBR
[PROCESS_TABLE + 2*16 + 14] = PTBR;

//PTLR
[PROCESS_TABLE + 2*16 + 15] = PTLR;




//third process
//page table

PTBR = PAGE_TABLE_BASE + 60;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 92;
[PTBR+5] = "0110";
[PTBR+6] = 93;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 89;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 90;
[PTBR+17] = "0110";
[PTBR+18] = 91;
[PTBR+19] = "0110";


[90*512] = [89 * 512 + 1];

//pid
[PROCESS_TABLE + 3*16 + 1] = 3;

[PROCESS_TABLE + 3*16 + 4]=CREATED;

//user_area_page
[PROCESS_TABLE + 3*16 + 11] = 94;

//KPTR
[PROCESS_TABLE + 3*16  + 12] = 0;

//UPTR
[PROCESS_TABLE + 3*16  + 13] = 8*512;

//PTBR
[PROCESS_TABLE + 3*16 + 14] = PTBR;

//PTLR
[PROCESS_TABLE + 3*16 + 15] = PTLR;



//assigning rest of the processes as terminated
[PROCESS_TABLE + 4*16 + 4]=TERMINATED;
[PROCESS_TABLE + 5*16 + 4]=TERMINATED;
[PROCESS_TABLE + 6*16 + 4]=TERMINATED;
[PROCESS_TABLE + 7*16 + 4]=TERMINATED;
[PROCESS_TABLE + 8*16 + 4]=TERMINATED;
[PROCESS_TABLE + 9*16 + 4]=TERMINATED;
[PROCESS_TABLE + 10*16 + 4]=TERMINATED;
[PROCESS_TABLE + 11*16 + 4]=TERMINATED;
[PROCESS_TABLE + 12*16 + 4]=TERMINATED;
[PROCESS_TABLE + 13*16 + 4]=TERMINATED;
[PROCESS_TABLE + 14*16 + 4]=TERMINATED;
[PROCESS_TABLE + 15*16 + 4]=TERMINATED;
return;