alias functionNum R1; 
alias currentPID R2;

//Free user area page
if(functionNum==2) then

	alias userAreaPageNo R3;
	userAreaPageNo=[PROCESS_TABLE + currentPID*16 + 11];

	backup;
	R1=2;
	R2=userAreaPageNo;
	call MOD_2;
	restore;

	return;

endif;


//Exit process function
if(functionNum==3) then 

	//Free page table Entries
	backup;
	R1=4;
	R2=currentPID;
	call MOD_1;
	restore;

	//Free User area page
	backup;
	R1=2;
	R2=currentPID;
	call MOD_1;
	restore;

	[PROCESS_TABLE+16*currentPID+4]=TERMINATED;
	return;

endif;



//Free page table function
if(functionNum==4) then
	
	PTBR=PAGE_TABLE_BASE+currentPID*20;

	//Invalidating Library Pages
	[PTBR+0]=-1;
	[PTBR+1]="0000";
	[PTBR+2]=-1;
	[PTBR+3]="0000";

	backup;
    alias p R4;
    p=4;

    //checking for valid entries in the PT to invalidate them by calling release page
    while(p<20) do

        if([PTBR+p]!=-1) then

            backup;
            R1=2;
            R2=[PTBR+p];
            call MOD_2;
            restore;

            [PTBR+p]=-1;
            [PTBR+p+1]="0000";
        endif;

        p=p+2;

    endwhile;

    //checking in diskmap for stored blocks to release them
    alias disk_map R8;
	disk_map = DISK_MAP_TABLE + 10*currentPID;

	alias i R9;
	i=0;

	while(i<=9) do

		if( ([disk_map+i]!=-1) && (i==2 || i==3 || i==8 || i==9) ) then
			backup;
			//calling release block 
			R1=4;
			R2= [disk_map+i]; 
			call MOD_2;
			restore;
		endif;

		[disk_map+i]=-1; //setting all values to -1
		i=i+1;

	endwhile;
	restore;

	return;
endif;