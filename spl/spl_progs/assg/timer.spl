[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;

// Setting SP to UArea Page number * 512 - 1
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;
backup;

// memory task manager -> check each time for the total number of pages used and store if higher
backup;
alias counter R10;
alias memUsage R11;

counter = 0;
memUsage = 0;
while (counter < NUM_MEM_PAGES) do
    if ([MEMORY_FREE_LIST+counter] != 0) then
        memUsage = memUsage + 1;
    endif;
    counter = counter+1;
endwhile;

alias prevMemUsage R12;
prevMemUsage = SYSTEM_STATUS_TABLE+25;
if (memUsage > [prevMemUsage]) then 
    [prevMemUsage] = memUsage;
endif;
restore;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 4] = READY;

//Loop through the process table entires and increment the TICK field of each process IS NOT DONE in this stage

//calling scheduler
call MOD_5;

restore;
SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9] = 0;



ireturn;